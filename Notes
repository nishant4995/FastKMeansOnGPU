It is very very important to export OMP_NUM_THREADS before running the program, else this will not be defined and program unusually seg faults


Date: 6 Feb
Writing d2_sample_2 with the assumption that in each run we get the same number of threads. This is needed so that the size of partitions remains the same throughout and I can use the cumulative distance array to optimize the procedure because distance value can change for a point only if it is smaller than the current value so we need not iterate over each center to find the minimum


Date: 1 March
Which random number generator do we use has an impact on the performance on the cost of the solution
MT19937 is better than using standard rand() function! Need to find its c variant and use it

Date: 2 March
Distribution of workload between threads is wrongly done in d2_sample.
This has been working fine all this time because number of threads was a factor of NUM_POINTS and so no points were left out.
If it is not the case then some points are left out towards the last for which no thread does the calculation.
I have used the same thing everywhere so may be I need to correct it so that if num_threads is not a factor of NUM_POINTS, things still work correctly
